<?php

class SingleElimNextMatchTestCase extends DrupalWebTestCase {
  /**
   * Test info.
   */
  public static function getInfo() {
    return array(
      'name' => t('Test Single Elimination next match positions'),
      'description' => t('Tests single elimination tournaments with a varying number or contestants.'),
      'group' => t('Tourney'),
    );
  }

  /**
   * Set up test.
   */
  public function setUp() {
    module_load_include('php', 'tourney', 'plugins/tourney_formats/BaseFormatControllers/SingleElimination');
    parent::setUp(array(
      'tourney',
    ));
  }

  /**
   * Loops through all the matches defined in the test and checks values against
   * the plugin.
   *
   * @param $match
   *   A formatted match array that has a winner and slot.
   * @param $tournament
   *   The built tournament object.
   */
  protected function checkNextMatch($match, $tournament) {
    $this->pass('Testing Single Elimination with ' . $tournament->numContestants . ' players.');
    $matches = $tournament->data['matches'];

    foreach ($match as $mid => $info) {
      $this->assertEqual($info['winner'], $matches[$mid]['nextMatch']['winner']['id'], 'Match ' . $mid . ' winner is going to the correct match', 'PHP');
      $this->assertEqual($info['slot'], $matches[$mid]['nextMatch']['winner']['slot'], 'Match ' . $mid . ' winner is going to the correct slot', 'PHP');
    }
    $this->pass('End of Single Elimination with ' . $tournament->numContestants . ' players.');
  }

	/**
	 * Testing Single Elimination next match logic.
	 */
  public function testSingleEliminationLogic() {

    /**
     * 4 man Single
     */
    $tournament = new SingleEliminationController(4);
    $tournament->build();

    // Set the paths we are expecting the plugin to return.
    $match = array(
      1 => array(
        'winner' => 3,
        'slot' => 1,
      ),
      2 => array(
        'winner' => 3,
        'slot' => 2,
      ),
    );

    $this->checkNextMatch($match, $tournament);


    /**
     * 5 man Single
     */
    $tournament = new SingleEliminationController(5);
    $tournament->build();

    // Set the paths we are expecting the plugin to return.
    $match = array(
      2 => array(
        'winner' => 5,
        'slot' => 2,
      ),
      5 => array(
        'winner' => 7,
        'slot' => 1,
      ),
      6 => array(
        'winner' => 7,
        'slot' => 2,
      ),
    );

    $this->checkNextMatch($match, $tournament);


    /**
     * 6 man Single
     */
    $tournament = new SingleEliminationController(6);
    $tournament->build();

    // Set the paths we are expecting the plugin to return.
    $match = array(
      2 => array(
        'winner' => 5,
        'slot' => 2,
      ),
      4 => array(
        'winner' => 6,
        'slot' => 2,
      ),
      5 => array(
        'winner' => 7,
        'slot' => 1,
      ),
      6 => array(
        'winner' => 7,
        'slot' => 2,
      ),
    );

    $this->checkNextMatch($match, $tournament);


    /**
     * 7 man Single
     */
    $tournament = new SingleEliminationController(7);
    $tournament->build();

    // Set the paths we are expecting the plugin to return.
    $match = array(
      2 => array(
        'winner' => 5,
        'slot' => 2,
      ),
      3 => array(
        'winner' => 6,
        'slot' => 1,
      ),
      4 => array(
        'winner' => 6,
        'slot' => 2,
      ),
      5 => array(
        'winner' => 7,
        'slot' => 1,
      ),
      6 => array(
        'winner' => 7,
        'slot' => 2,
      ),
    );

    $this->checkNextMatch($match, $tournament);


    /**
     * 8 man Single
     */
    $tournament = new SingleEliminationController(8);
    $tournament->build();

    // Set the paths we are expecting the plugin to return.
    $match = array(
      1 => array(
        'winner' => 5,
        'slot' => 1,
      ),
      2 => array(
        'winner' => 5,
        'slot' => 2,
      ),
      3 => array(
        'winner' => 6,
        'slot' => 1,
      ),
      4 => array(
        'winner' => 6,
        'slot' => 2,
      ),
      5 => array(
        'winner' => 7,
        'slot' => 1,
      ),
      6 => array(
        'winner' => 7,
        'slot' => 2,
      ),
    );

    $this->checkNextMatch($match, $tournament);


    /**
     * 9 man Single
     */
    $tournament = new SingleEliminationController(9);
    $tournament->build();

    // Set the paths we are expecting the plugin to return.
    $match = array(
      2 => array(
        'winner' => 9,
        'slot' => 2,
      ),
      9 => array(
        'winner' => 13,
        'slot' => 1,
      ),
      10 => array(
        'winner' => 13,
        'slot' => 2,
      ),
      11 => array(
        'winner' => 14,
        'slot' => 1,
      ),
      12 => array(
        'winner' => 14,
        'slot' => 2,
      ),
      13 => array(
        'winner' => 15,
        'slot' => 1,
      ),
      14 => array(
        'winner' => 15,
        'slot' => 2,
      ),
    );

    $this->checkNextMatch($match, $tournament);


    /**
     * 10 man Single
     */
    $tournament = new SingleEliminationController(10);
    $tournament->build();

    // Set the paths we are expecting the plugin to return.
    $match = array(
      2 => array(
        'winner' => 9,
        'slot' => 2,
      ),
      6 => array(
        'winner' => 11,
        'slot' => 2,
      ),
      9 => array(
        'winner' => 13,
        'slot' => 1,
      ),
      10 => array(
        'winner' => 13,
        'slot' => 2,
      ),
      11 => array(
        'winner' => 14,
        'slot' => 1,
      ),
      12 => array(
        'winner' => 14,
        'slot' => 2,
      ),
      13 => array(
        'winner' => 15,
        'slot' => 1,
      ),
      14 => array(
        'winner' => 15,
        'slot' => 2,
      ),
    );

    $this->checkNextMatch($match, $tournament);


    /**
     * 11 man Single
     */
    $tournament = new SingleEliminationController(11);
    $tournament->build();

    // Set the paths we are expecting the plugin to return.
    $match = array(
      2 => array(
        'winner' => 9,
        'slot' => 2,
      ),
      6 => array(
        'winner' => 11,
        'slot' => 2,
      ),
      8 => array(
        'winner' => 12,
        'slot' => 2,
      ),
      9 => array(
        'winner' => 13,
        'slot' => 1,
      ),
      10 => array(
        'winner' => 13,
        'slot' => 2,
      ),
      11 => array(
        'winner' => 14,
        'slot' => 1,
      ),
      12 => array(
        'winner' => 14,
        'slot' => 2,
      ),
      13 => array(
        'winner' => 15,
        'slot' => 1,
      ),
      14 => array(
        'winner' => 15,
        'slot' => 2,
      ),
    );


    $this->checkNextMatch($match, $tournament);


    /**
     * 12 man Single
     */
    $tournament = new SingleEliminationController(12);
    $tournament->build();

    // Set the paths we are expecting the plugin to return.
    $match = array(
      2 => array(
        'winner' => 9,
        'slot' => 2,
      ),
      4 => array(
        'winner' => 10,
        'slot' => 2,
      ),
      6 => array(
        'winner' => 11,
        'slot' => 2,
      ),
      8 => array(
        'winner' => 12,
        'slot' => 2,
      ),
      9 => array(
        'winner' => 13,
        'slot' => 1,
      ),
      10 => array(
        'winner' => 13,
        'slot' => 2,
      ),
      11 => array(
        'winner' => 14,
        'slot' => 1,
      ),
      12 => array(
        'winner' => 14,
        'slot' => 2,
      ),
      13 => array(
        'winner' => 15,
        'slot' => 1,
      ),
      14 => array(
        'winner' => 15,
        'slot' => 2,
      ),
    );

    $this->checkNextMatch($match, $tournament);


    /**
     * 13 man Single
     */
    $tournament = new SingleEliminationController(13);
    $tournament->build();

    // Set the paths we are expecting the plugin to return.
    $match = array(
      2 => array(
        'winner' => 9,
        'slot' => 2,
      ),
      3 => array(
        'winner' => 10,
        'slot' => 1,
      ),
      4 => array(
        'winner' => 10,
        'slot' => 2,
      ),
      6 => array(
        'winner' => 11,
        'slot' => 2,
      ),
      8 => array(
        'winner' => 12,
        'slot' => 2,
      ),
      9 => array(
        'winner' => 13,
        'slot' => 1,
      ),
      10 => array(
        'winner' => 13,
        'slot' => 2,
      ),
      11 => array(
        'winner' => 14,
        'slot' => 1,
      ),
      12 => array(
        'winner' => 14,
        'slot' => 2,
      ),
      13 => array(
        'winner' => 15,
        'slot' => 1,
      ),
      14 => array(
        'winner' => 15,
        'slot' => 2,
      ),
    );

    $this->checkNextMatch($match, $tournament);


    /**
     * 14 man Single
     */
    $tournament = new SingleEliminationController(14);
    $tournament->build();

    // Set the paths we are expecting the plugin to return.
    $match = array(
      2 => array(
        'winner' => 9,
        'slot' => 2,
      ),
      3 => array(
        'winner' => 10,
        'slot' => 1,
      ),
      4 => array(
        'winner' => 10,
        'slot' => 2,
      ),
      6 => array(
        'winner' => 11,
        'slot' => 2,
      ),
      7 => array(
        'winner' => 12,
        'slot' => 1,
      ),
      8 => array(
        'winner' => 12,
        'slot' => 2,
      ),
      9 => array(
        'winner' => 13,
        'slot' => 1,
      ),
      10 => array(
        'winner' => 13,
        'slot' => 2,
      ),
      11 => array(
        'winner' => 14,
        'slot' => 1,
      ),
      12 => array(
        'winner' => 14,
        'slot' => 2,
      ),
      13 => array(
        'winner' => 15,
        'slot' => 1,
      ),
      14 => array(
        'winner' => 15,
        'slot' => 2,
      ),
    );

    $this->checkNextMatch($match, $tournament);


    /**
     * 15 man Single
     */
    $tournament = new SingleEliminationController(15);
    $tournament->build();

    // Set the paths we are expecting the plugin to return.
    $match = array(
      2 => array(
        'winner' => 9,
        'slot' => 2,
      ),
      3 => array(
        'winner' => 10,
        'slot' => 1,
      ),
      4 => array(
        'winner' => 10,
        'slot' => 2,
      ),
      5 => array(
        'winner' => 11,
        'slot' => 1,
      ),
      6 => array(
        'winner' => 11,
        'slot' => 2,
      ),
      7 => array(
        'winner' => 12,
        'slot' => 1,
      ),
      8 => array(
        'winner' => 12,
        'slot' => 2,
      ),
      9 => array(
        'winner' => 13,
        'slot' => 1,
      ),
      10 => array(
        'winner' => 13,
        'slot' => 2,
      ),
      11 => array(
        'winner' => 14,
        'slot' => 1,
      ),
      12 => array(
        'winner' => 14,
        'slot' => 2,
      ),
      13 => array(
        'winner' => 15,
        'slot' => 1,
      ),
      14 => array(
        'winner' => 15,
        'slot' => 2,
      ),
    );

    $this->checkNextMatch($match, $tournament);


    /**
     * 16 man Single
     */
    $tournament = new SingleEliminationController(16);
    $tournament->build();

    // Set the paths we are expecting the plugin to return.
    $match = array(
      1 => array(
        'winner' => 9,
        'slot' => 1,
      ),
      2 => array(
        'winner' => 9,
        'slot' => 2,
      ),
      3 => array(
        'winner' => 10,
        'slot' => 1,
      ),
      4 => array(
        'winner' => 10,
        'slot' => 2,
      ),
      5 => array(
        'winner' => 11,
        'slot' => 1,
      ),
      6 => array(
        'winner' => 11,
        'slot' => 2,
      ),
      7 => array(
        'winner' => 12,
        'slot' => 1,
      ),
      8 => array(
        'winner' => 12,
        'slot' => 2,
      ),
      9 => array(
        'winner' => 13,
        'slot' => 1,
      ),
      10 => array(
        'winner' => 13,
        'slot' => 2,
      ),
      11 => array(
        'winner' => 14,
        'slot' => 1,
      ),
      12 => array(
        'winner' => 14,
        'slot' => 2,
      ),
      13 => array(
        'winner' => 15,
        'slot' => 1,
      ),
      14 => array(
        'winner' => 15,
        'slot' => 2,
      ),
    );

    $this->checkNextMatch($match, $tournament);


    /**
     * 17 man Single
     */
    $tournament = new SingleEliminationController(17);
    $tournament->build();

    // Set the paths we are expecting the plugin to return.
    $match = array(
      2 => array(
        'winner' => 17,
        'slot' => 2,
      ),
      17 => array(
        'winner' => 25,
        'slot' => 1,
      ),
      18 => array(
        'winner' => 25,
        'slot' => 2,
      ),
      19 => array(
        'winner' => 26,
        'slot' => 1,
      ),
      20 => array(
        'winner' => 26,
        'slot' => 2,
      ),
      21 => array(
        'winner' => 27,
        'slot' => 1,
      ),
      22 => array(
        'winner' => 27,
        'slot' => 2,
      ),
      23 => array(
        'winner' => 28,
        'slot' => 1,
      ),
      24 => array(
        'winner' => 28,
        'slot' => 2,
      ),
      25 => array(
        'winner' => 29,
        'slot' => 1,
      ),
      26 => array(
        'winner' => 29,
        'slot' => 2,
      ),
      27 => array(
        'winner' => 30,
        'slot' => 1,
      ),
      28 => array(
        'winner' => 30,
        'slot' => 2,
      ),
      29 => array(
        'winner' => 31,
        'slot' => 1,
      ),
      30 => array(
        'winner' => 31,
        'slot' => 2,
      ),
    );

    $this->checkNextMatch($match, $tournament);


    /**
     * 18 man Single
     */
    $tournament = new SingleEliminationController(18);
    $tournament->build();

    // Set the paths we are expecting the plugin to return.
    $match = array(
      2 => array(
        'winner' => 17,
        'slot' => 2,
      ),
      10 => array(
        'winner' => 21,
        'slot' => 2,
      ),
      17 => array(
        'winner' => 25,
        'slot' => 1,
      ),
      18 => array(
        'winner' => 25,
        'slot' => 2,
      ),
      19 => array(
        'winner' => 26,
        'slot' => 1,
      ),
      20 => array(
        'winner' => 26,
        'slot' => 2,
      ),
      21 => array(
        'winner' => 27,
        'slot' => 1,
      ),
      22 => array(
        'winner' => 27,
        'slot' => 2,
      ),
      23 => array(
        'winner' => 28,
        'slot' => 1,
      ),
      24 => array(
        'winner' => 28,
        'slot' => 2,
      ),
      25 => array(
        'winner' => 29,
        'slot' => 1,
      ),
      26 => array(
        'winner' => 29,
        'slot' => 2,
      ),
      27 => array(
        'winner' => 30,
        'slot' => 1,
      ),
      28 => array(
        'winner' => 30,
        'slot' => 2,
      ),
      29 => array(
        'winner' => 31,
        'slot' => 1,
      ),
      30 => array(
        'winner' => 31,
        'slot' => 2,
      ),
    );

    $this->checkNextMatch($match, $tournament);


    /**
     * 19 man Single
     */
    $tournament = new SingleEliminationController(19);
    $tournament->build();

    // Set the paths we are expecting the plugin to return.
    $match = array(
      2 => array(
        'winner' => 17,
        'slot' => 2,
      ),
      10 => array(
        'winner' => 21,
        'slot' => 2,
      ),
      14 => array(
        'winner' => 23,
        'slot' => 2,
      ),
      17 => array(
        'winner' => 25,
        'slot' => 1,
      ),
      18 => array(
        'winner' => 25,
        'slot' => 2,
      ),
      19 => array(
        'winner' => 26,
        'slot' => 1,
      ),
      20 => array(
        'winner' => 26,
        'slot' => 2,
      ),
      21 => array(
        'winner' => 27,
        'slot' => 1,
      ),
      22 => array(
        'winner' => 27,
        'slot' => 2,
      ),
      23 => array(
        'winner' => 28,
        'slot' => 1,
      ),
      24 => array(
        'winner' => 28,
        'slot' => 2,
      ),
      25 => array(
        'winner' => 29,
        'slot' => 1,
      ),
      26 => array(
        'winner' => 29,
        'slot' => 2,
      ),
      27 => array(
        'winner' => 30,
        'slot' => 1,
      ),
      28 => array(
        'winner' => 30,
        'slot' => 2,
      ),
      29 => array(
        'winner' => 31,
        'slot' => 1,
      ),
      30 => array(
        'winner' => 31,
        'slot' => 2,
      ),
    );

    $this->checkNextMatch($match, $tournament);


    /**
     * 20 man Single
     */
    $tournament = new SingleEliminationController(20);
    $tournament->build();

    // Set the paths we are expecting the plugin to return.
    $match = array(
      2 => array(
        'winner' => 17,
        'slot' => 2,
      ),
      6 => array(
        'winner' => 19,
        'slot' => 2,
      ),
      10 => array(
        'winner' => 21,
        'slot' => 2,
      ),
      14 => array(
        'winner' => 23,
        'slot' => 2,
      ),
      17 => array(
        'winner' => 25,
        'slot' => 1,
      ),
      18 => array(
        'winner' => 25,
        'slot' => 2,
      ),
      19 => array(
        'winner' => 26,
        'slot' => 1,
      ),
      20 => array(
        'winner' => 26,
        'slot' => 2,
      ),
      21 => array(
        'winner' => 27,
        'slot' => 1,
      ),
      22 => array(
        'winner' => 27,
        'slot' => 2,
      ),
      23 => array(
        'winner' => 28,
        'slot' => 1,
      ),
      24 => array(
        'winner' => 28,
        'slot' => 2,
      ),
      25 => array(
        'winner' => 29,
        'slot' => 1,
      ),
      26 => array(
        'winner' => 29,
        'slot' => 2,
      ),
      27 => array(
        'winner' => 30,
        'slot' => 1,
      ),
      28 => array(
        'winner' => 30,
        'slot' => 2,
      ),
      29 => array(
        'winner' => 31,
        'slot' => 1,
      ),
      30 => array(
        'winner' => 31,
        'slot' => 2,
      ),
    );

    $this->checkNextMatch($match, $tournament);


    /**
     * 21 man Single
     */
    $tournament = new SingleEliminationController(21);
    $tournament->build();

    // Set the paths we are expecting the plugin to return.
    $match = array(
      2 => array(
        'winner' => 17,
        'slot' => 2,
      ),
      6 => array(
        'winner' => 19,
        'slot' => 2,
      ),
      10 => array(
        'winner' => 21,
        'slot' => 2,
      ),
      14 => array(
        'winner' => 23,
        'slot' => 2,
      ),
      16 => array(
        'winner' => 24,
        'slot' => 2,
      ),
      17 => array(
        'winner' => 25,
        'slot' => 1,
      ),
      18 => array(
        'winner' => 25,
        'slot' => 2,
      ),
      19 => array(
        'winner' => 26,
        'slot' => 1,
      ),
      20 => array(
        'winner' => 26,
        'slot' => 2,
      ),
      21 => array(
        'winner' => 27,
        'slot' => 1,
      ),
      22 => array(
        'winner' => 27,
        'slot' => 2,
      ),
      23 => array(
        'winner' => 28,
        'slot' => 1,
      ),
      24 => array(
        'winner' => 28,
        'slot' => 2,
      ),
      25 => array(
        'winner' => 29,
        'slot' => 1,
      ),
      26 => array(
        'winner' => 29,
        'slot' => 2,
      ),
      27 => array(
        'winner' => 30,
        'slot' => 1,
      ),
      28 => array(
        'winner' => 30,
        'slot' => 2,
      ),
      29 => array(
        'winner' => 31,
        'slot' => 1,
      ),
      30 => array(
        'winner' => 31,
        'slot' => 2,
      ),
    );

    $this->checkNextMatch($match, $tournament);


    /**
     * 22 man Single
     */
    $tournament = new SingleEliminationController(22);
    $tournament->build();

    // Set the paths we are expecting the plugin to return.
    $match = array(
      2 => array(
        'winner' => 17,
        'slot' => 2,
      ),
      6 => array(
        'winner' => 19,
        'slot' => 2,
      ),
      8 => array(
        'winner' => 20,
        'slot' => 2,
      ),
      10 => array(
        'winner' => 21,
        'slot' => 2,
      ),
      14 => array(
        'winner' => 23,
        'slot' => 2,
      ),
      16 => array(
        'winner' => 24,
        'slot' => 2,
      ),
      17 => array(
        'winner' => 25,
        'slot' => 1,
      ),
      18 => array(
        'winner' => 25,
        'slot' => 2,
      ),
      19 => array(
        'winner' => 26,
        'slot' => 1,
      ),
      20 => array(
        'winner' => 26,
        'slot' => 2,
      ),
      21 => array(
        'winner' => 27,
        'slot' => 1,
      ),
      22 => array(
        'winner' => 27,
        'slot' => 2,
      ),
      23 => array(
        'winner' => 28,
        'slot' => 1,
      ),
      24 => array(
        'winner' => 28,
        'slot' => 2,
      ),
      25 => array(
        'winner' => 29,
        'slot' => 1,
      ),
      26 => array(
        'winner' => 29,
        'slot' => 2,
      ),
      27 => array(
        'winner' => 30,
        'slot' => 1,
      ),
      28 => array(
        'winner' => 30,
        'slot' => 2,
      ),
      29 => array(
        'winner' => 31,
        'slot' => 1,
      ),
      30 => array(
        'winner' => 31,
        'slot' => 2,
      ),
    );

    $this->checkNextMatch($match, $tournament);


    /**
     * 23 man Single
     */
    $tournament = new SingleEliminationController(23);
    $tournament->build();

    // Set the paths we are expecting the plugin to return.
    $match = array(
      2 => array(
        'winner' => 17,
        'slot' => 2,
      ),
      6 => array(
        'winner' => 19,
        'slot' => 2,
      ),
      8 => array(
        'winner' => 20,
        'slot' => 2,
      ),
      10 => array(
        'winner' => 21,
        'slot' => 2,
      ),
      12 => array(
        'winner' => 22,
        'slot' => 2,
      ),
      14 => array(
        'winner' => 23,
        'slot' => 2,
      ),
      16 => array(
        'winner' => 24,
        'slot' => 2,
      ),
      17 => array(
        'winner' => 25,
        'slot' => 1,
      ),
      18 => array(
        'winner' => 25,
        'slot' => 2,
      ),
      19 => array(
        'winner' => 26,
        'slot' => 1,
      ),
      20 => array(
        'winner' => 26,
        'slot' => 2,
      ),
      21 => array(
        'winner' => 27,
        'slot' => 1,
      ),
      22 => array(
        'winner' => 27,
        'slot' => 2,
      ),
      23 => array(
        'winner' => 28,
        'slot' => 1,
      ),
      24 => array(
        'winner' => 28,
        'slot' => 2,
      ),
      25 => array(
        'winner' => 29,
        'slot' => 1,
      ),
      26 => array(
        'winner' => 29,
        'slot' => 2,
      ),
      27 => array(
        'winner' => 30,
        'slot' => 1,
      ),
      28 => array(
        'winner' => 30,
        'slot' => 2,
      ),
      29 => array(
        'winner' => 31,
        'slot' => 1,
      ),
      30 => array(
        'winner' => 31,
        'slot' => 2,
      ),
    );

    $this->checkNextMatch($match, $tournament);


    /**
     * 24 man Single
     */
    $tournament = new SingleEliminationController(24);
    $tournament->build();

    // Set the paths we are expecting the plugin to return.
    $match = array(
      2 => array(
        'winner' => 17,
        'slot' => 2,
      ),
      4 => array(
        'winner' => 18,
        'slot' => 2,
      ),
      6 => array(
        'winner' => 19,
        'slot' => 2,
      ),
      8 => array(
        'winner' => 20,
        'slot' => 2,
      ),
      10 => array(
        'winner' => 21,
        'slot' => 2,
      ),
      12 => array(
        'winner' => 22,
        'slot' => 2,
      ),
      14 => array(
        'winner' => 23,
        'slot' => 2,
      ),
      16 => array(
        'winner' => 24,
        'slot' => 2,
      ),
      17 => array(
        'winner' => 25,
        'slot' => 1,
      ),
      18 => array(
        'winner' => 25,
        'slot' => 2,
      ),
      19 => array(
        'winner' => 26,
        'slot' => 1,
      ),
      20 => array(
        'winner' => 26,
        'slot' => 2,
      ),
      21 => array(
        'winner' => 27,
        'slot' => 1,
      ),
      22 => array(
        'winner' => 27,
        'slot' => 2,
      ),
      23 => array(
        'winner' => 28,
        'slot' => 1,
      ),
      24 => array(
        'winner' => 28,
        'slot' => 2,
      ),
      25 => array(
        'winner' => 29,
        'slot' => 1,
      ),
      26 => array(
        'winner' => 29,
        'slot' => 2,
      ),
      27 => array(
        'winner' => 30,
        'slot' => 1,
      ),
      28 => array(
        'winner' => 30,
        'slot' => 2,
      ),
      29 => array(
        'winner' => 31,
        'slot' => 1,
      ),
      30 => array(
        'winner' => 31,
        'slot' => 2,
      ),
    );

    $this->checkNextMatch($match, $tournament);


    /**
     * 25 man Single
     */
    $tournament = new SingleEliminationController(25);
    $tournament->build();

    // Set the paths we are expecting the plugin to return.
    $match = array(
      2 => array(
        'winner' => 17,
        'slot' => 2,
      ),
      3 => array(
        'winner' => 18,
        'slot' => 1,
      ),
      4 => array(
        'winner' => 18,
        'slot' => 2,
      ),
      6 => array(
        'winner' => 19,
        'slot' => 2,
      ),
      8 => array(
        'winner' => 20,
        'slot' => 2,
      ),
      10 => array(
        'winner' => 21,
        'slot' => 2,
      ),
      12 => array(
        'winner' => 22,
        'slot' => 2,
      ),
      14 => array(
        'winner' => 23,
        'slot' => 2,
      ),
      16 => array(
        'winner' => 24,
        'slot' => 2,
      ),
      17 => array(
        'winner' => 25,
        'slot' => 1,
      ),
      18 => array(
        'winner' => 25,
        'slot' => 2,
      ),
      19 => array(
        'winner' => 26,
        'slot' => 1,
      ),
      20 => array(
        'winner' => 26,
        'slot' => 2,
      ),
      21 => array(
        'winner' => 27,
        'slot' => 1,
      ),
      22 => array(
        'winner' => 27,
        'slot' => 2,
      ),
      23 => array(
        'winner' => 28,
        'slot' => 1,
      ),
      24 => array(
        'winner' => 28,
        'slot' => 2,
      ),
      25 => array(
        'winner' => 29,
        'slot' => 1,
      ),
      26 => array(
        'winner' => 29,
        'slot' => 2,
      ),
      27 => array(
        'winner' => 30,
        'slot' => 1,
      ),
      28 => array(
        'winner' => 30,
        'slot' => 2,
      ),
      29 => array(
        'winner' => 31,
        'slot' => 1,
      ),
      30 => array(
        'winner' => 31,
        'slot' => 2,
      ),
    );

    $this->checkNextMatch($match, $tournament);


    /**
     * 26 man Single
     */
    $tournament = new SingleEliminationController(26);
    $tournament->build();

    // Set the paths we are expecting the plugin to return.
    $match = array(
      2 => array(
        'winner' => 17,
        'slot' => 2,
      ),
      3 => array(
        'winner' => 18,
        'slot' => 1,
      ),
      4 => array(
        'winner' => 18,
        'slot' => 2,
      ),
      6 => array(
        'winner' => 19,
        'slot' => 2,
      ),
      8 => array(
        'winner' => 20,
        'slot' => 2,
      ),
      10 => array(
        'winner' => 21,
        'slot' => 2,
      ),
      11 => array(
        'winner' => 22,
        'slot' => 1,
      ),
      12 => array(
        'winner' => 22,
        'slot' => 2,
      ),
      14 => array(
        'winner' => 23,
        'slot' => 2,
      ),
      16 => array(
        'winner' => 24,
        'slot' => 2,
      ),
      17 => array(
        'winner' => 25,
        'slot' => 1,
      ),
      18 => array(
        'winner' => 25,
        'slot' => 2,
      ),
      19 => array(
        'winner' => 26,
        'slot' => 1,
      ),
      20 => array(
        'winner' => 26,
        'slot' => 2,
      ),
      21 => array(
        'winner' => 27,
        'slot' => 1,
      ),
      22 => array(
        'winner' => 27,
        'slot' => 2,
      ),
      23 => array(
        'winner' => 28,
        'slot' => 1,
      ),
      24 => array(
        'winner' => 28,
        'slot' => 2,
      ),
      25 => array(
        'winner' => 29,
        'slot' => 1,
      ),
      26 => array(
        'winner' => 29,
        'slot' => 2,
      ),
      27 => array(
        'winner' => 30,
        'slot' => 1,
      ),
      28 => array(
        'winner' => 30,
        'slot' => 2,
      ),
      29 => array(
        'winner' => 31,
        'slot' => 1,
      ),
      30 => array(
        'winner' => 31,
        'slot' => 2,
      ),
    );

    $this->checkNextMatch($match, $tournament);


    /**
     * 27 man Single
     */
    $tournament = new SingleEliminationController(27);
    $tournament->build();

    // Set the paths we are expecting the plugin to return.
    $match = array(
      2 => array(
        'winner' => 17,
        'slot' => 2,
      ),
      3 => array(
        'winner' => 18,
        'slot' => 1,
      ),
      4 => array(
        'winner' => 18,
        'slot' => 2,
      ),
      6 => array(
        'winner' => 19,
        'slot' => 2,
      ),
      8 => array(
        'winner' => 20,
        'slot' => 2,
      ),
      10 => array(
        'winner' => 21,
        'slot' => 2,
      ),
      11 => array(
        'winner' => 22,
        'slot' => 1,
      ),
      12 => array(
        'winner' => 22,
        'slot' => 2,
      ),
      14 => array(
        'winner' => 23,
        'slot' => 2,
      ),
      15 => array(
        'winner' => 24,
        'slot' => 1,
      ),
      16 => array(
        'winner' => 24,
        'slot' => 2,
      ),
      17 => array(
        'winner' => 25,
        'slot' => 1,
      ),
      18 => array(
        'winner' => 25,
        'slot' => 2,
      ),
      19 => array(
        'winner' => 26,
        'slot' => 1,
      ),
      20 => array(
        'winner' => 26,
        'slot' => 2,
      ),
      21 => array(
        'winner' => 27,
        'slot' => 1,
      ),
      22 => array(
        'winner' => 27,
        'slot' => 2,
      ),
      23 => array(
        'winner' => 28,
        'slot' => 1,
      ),
      24 => array(
        'winner' => 28,
        'slot' => 2,
      ),
      25 => array(
        'winner' => 29,
        'slot' => 1,
      ),
      26 => array(
        'winner' => 29,
        'slot' => 2,
      ),
      27 => array(
        'winner' => 30,
        'slot' => 1,
      ),
      28 => array(
        'winner' => 30,
        'slot' => 2,
      ),
      29 => array(
        'winner' => 31,
        'slot' => 1,
      ),
      30 => array(
        'winner' => 31,
        'slot' => 2,
      ),
    );

    $this->checkNextMatch($match, $tournament);


    /**
     * 28 man Single
     */
    $tournament = new SingleEliminationController(28);
    $tournament->build();

    // Set the paths we are expecting the plugin to return.
    $match = array(
      2 => array(
        'winner' => 17,
        'slot' => 2,
      ),
      3 => array(
        'winner' => 18,
        'slot' => 1,
      ),
      4 => array(
        'winner' => 18,
        'slot' => 2,
      ),
      6 => array(
        'winner' => 19,
        'slot' => 2,
      ),
      7 => array(
        'winner' => 20,
        'slot' => 1,
      ),
      8 => array(
        'winner' => 20,
        'slot' => 2,
      ),
      10 => array(
        'winner' => 21,
        'slot' => 2,
      ),
      11 => array(
        'winner' => 22,
        'slot' => 1,
      ),
      12 => array(
        'winner' => 22,
        'slot' => 2,
      ),
      14 => array(
        'winner' => 23,
        'slot' => 2,
      ),
      15 => array(
        'winner' => 24,
        'slot' => 1,
      ),
      16 => array(
        'winner' => 24,
        'slot' => 2,
      ),
      17 => array(
        'winner' => 25,
        'slot' => 1,
      ),
      18 => array(
        'winner' => 25,
        'slot' => 2,
      ),
      19 => array(
        'winner' => 26,
        'slot' => 1,
      ),
      20 => array(
        'winner' => 26,
        'slot' => 2,
      ),
      21 => array(
        'winner' => 27,
        'slot' => 1,
      ),
      22 => array(
        'winner' => 27,
        'slot' => 2,
      ),
      23 => array(
        'winner' => 28,
        'slot' => 1,
      ),
      24 => array(
        'winner' => 28,
        'slot' => 2,
      ),
      25 => array(
        'winner' => 29,
        'slot' => 1,
      ),
      26 => array(
        'winner' => 29,
        'slot' => 2,
      ),
      27 => array(
        'winner' => 30,
        'slot' => 1,
      ),
      28 => array(
        'winner' => 30,
        'slot' => 2,
      ),
      29 => array(
        'winner' => 31,
        'slot' => 1,
      ),
      30 => array(
        'winner' => 31,
        'slot' => 2,
      ),
    );

    $this->checkNextMatch($match, $tournament);


    /**
     * 29 man Single
     */
    $tournament = new SingleEliminationController(29);
    $tournament->build();

    // Set the paths we are expecting the plugin to return.
    $match = array(
      2 => array(
        'winner' => 17,
        'slot' => 2,
      ),
      3 => array(
        'winner' => 18,
        'slot' => 1,
      ),
      4 => array(
        'winner' => 18,
        'slot' => 2,
      ),
      5 => array(
        'winner' => 19,
        'slot' => 1,
      ),
      6 => array(
        'winner' => 19,
        'slot' => 2,
      ),
      7 => array(
        'winner' => 20,
        'slot' => 1,
      ),
      8 => array(
        'winner' => 20,
        'slot' => 2,
      ),
      10 => array(
        'winner' => 21,
        'slot' => 2,
      ),
      11 => array(
        'winner' => 22,
        'slot' => 1,
      ),
      12 => array(
        'winner' => 22,
        'slot' => 2,
      ),
      14 => array(
        'winner' => 23,
        'slot' => 2,
      ),
      15 => array(
        'winner' => 24,
        'slot' => 1,
      ),
      16 => array(
        'winner' => 24,
        'slot' => 2,
      ),
      17 => array(
        'winner' => 25,
        'slot' => 1,
      ),
      18 => array(
        'winner' => 25,
        'slot' => 2,
      ),
      19 => array(
        'winner' => 26,
        'slot' => 1,
      ),
      20 => array(
        'winner' => 26,
        'slot' => 2,
      ),
      21 => array(
        'winner' => 27,
        'slot' => 1,
      ),
      22 => array(
        'winner' => 27,
        'slot' => 2,
      ),
      23 => array(
        'winner' => 28,
        'slot' => 1,
      ),
      24 => array(
        'winner' => 28,
        'slot' => 2,
      ),
      25 => array(
        'winner' => 29,
        'slot' => 1,
      ),
      26 => array(
        'winner' => 29,
        'slot' => 2,
      ),
      27 => array(
        'winner' => 30,
        'slot' => 1,
      ),
      28 => array(
        'winner' => 30,
        'slot' => 2,
      ),
      29 => array(
        'winner' => 31,
        'slot' => 1,
      ),
      30 => array(
        'winner' => 31,
        'slot' => 2,
      ),
    );

    $this->checkNextMatch($match, $tournament);


    /**
     * 30 man Single
     */
    $tournament = new SingleEliminationController(30);
    $tournament->build();

    // Set the paths we are expecting the plugin to return.
    $match = array(
      2 => array(
        'winner' => 17,
        'slot' => 2,
      ),
      3 => array(
        'winner' => 18,
        'slot' => 1,
      ),
      4 => array(
        'winner' => 18,
        'slot' => 2,
      ),
      5 => array(
        'winner' => 19,
        'slot' => 1,
      ),
      6 => array(
        'winner' => 19,
        'slot' => 2,
      ),
      7 => array(
        'winner' => 20,
        'slot' => 1,
      ),
      8 => array(
        'winner' => 20,
        'slot' => 2,
      ),
      10 => array(
        'winner' => 21,
        'slot' => 2,
      ),
      11 => array(
        'winner' => 22,
        'slot' => 1,
      ),
      12 => array(
        'winner' => 22,
        'slot' => 2,
      ),
      13 => array(
        'winner' => 23,
        'slot' => 1,
      ),
      14 => array(
        'winner' => 23,
        'slot' => 2,
      ),
      15 => array(
        'winner' => 24,
        'slot' => 1,
      ),
      16 => array(
        'winner' => 24,
        'slot' => 2,
      ),
      17 => array(
        'winner' => 25,
        'slot' => 1,
      ),
      18 => array(
        'winner' => 25,
        'slot' => 2,
      ),
      19 => array(
        'winner' => 26,
        'slot' => 1,
      ),
      20 => array(
        'winner' => 26,
        'slot' => 2,
      ),
      21 => array(
        'winner' => 27,
        'slot' => 1,
      ),
      22 => array(
        'winner' => 27,
        'slot' => 2,
      ),
      23 => array(
        'winner' => 28,
        'slot' => 1,
      ),
      24 => array(
        'winner' => 28,
        'slot' => 2,
      ),
      25 => array(
        'winner' => 29,
        'slot' => 1,
      ),
      26 => array(
        'winner' => 29,
        'slot' => 2,
      ),
      27 => array(
        'winner' => 30,
        'slot' => 1,
      ),
      28 => array(
        'winner' => 30,
        'slot' => 2,
      ),
      29 => array(
        'winner' => 31,
        'slot' => 1,
      ),
      30 => array(
        'winner' => 31,
        'slot' => 2,
      ),
    );

    $this->checkNextMatch($match, $tournament);


    /**
     * 31 man Single
     */
    $tournament = new SingleEliminationController(31);
    $tournament->build();

    $match = array(
      2 => array(
        'winner' => 17,
        'slot' => 2,
      ),
      3 => array(
        'winner' => 18,
        'slot' => 1,
      ),
      4 => array(
        'winner' => 18,
        'slot' => 2,
      ),
      5 => array(
        'winner' => 19,
        'slot' => 1,
      ),
      6 => array(
        'winner' => 19,
        'slot' => 2,
      ),
      7 => array(
        'winner' => 20,
        'slot' => 1,
      ),
      8 => array(
        'winner' => 20,
        'slot' => 2,
      ),
      9 => array(
        'winner' => 21,
        'slot' => 1,
      ),
      10 => array(
        'winner' => 21,
        'slot' => 2,
      ),
      11 => array(
        'winner' => 22,
        'slot' => 1,
      ),
      12 => array(
        'winner' => 22,
        'slot' => 2,
      ),
      13 => array(
        'winner' => 23,
        'slot' => 1,
      ),
      14 => array(
        'winner' => 23,
        'slot' => 2,
      ),
      15 => array(
        'winner' => 24,
        'slot' => 1,
      ),
      16 => array(
        'winner' => 24,
        'slot' => 2,
      ),
      17 => array(
        'winner' => 25,
        'slot' => 1,
      ),
      18 => array(
        'winner' => 25,
        'slot' => 2,
      ),
      19 => array(
        'winner' => 26,
        'slot' => 1,
      ),
      20 => array(
        'winner' => 26,
        'slot' => 2,
      ),
      21 => array(
        'winner' => 27,
        'slot' => 1,
      ),
      22 => array(
        'winner' => 27,
        'slot' => 2,
      ),
      23 => array(
        'winner' => 28,
        'slot' => 1,
      ),
      24 => array(
        'winner' => 28,
        'slot' => 2,
      ),
      25 => array(
        'winner' => 29,
        'slot' => 1,
      ),
      26 => array(
        'winner' => 29,
        'slot' => 2,
      ),
      27 => array(
        'winner' => 30,
        'slot' => 1,
      ),
      28 => array(
        'winner' => 30,
        'slot' => 2,
      ),
      29 => array(
        'winner' => 31,
        'slot' => 1,
      ),
      30 => array(
        'winner' => 31,
        'slot' => 2,
      ),
    );

    $this->checkNextMatch($match, $tournament);


    /**
     * 32 man Single
     */
    $tournament = new SingleEliminationController(32);
    $tournament->build();

    // Set the paths we are expecting the plugin to return.
    $match = array(
      1 => array(
        'winner' => 17,
        'slot' => 1,
      ),
      2 => array(
        'winner' => 17,
        'slot' => 2,
      ),
      3 => array(
        'winner' => 18,
        'slot' => 1,
      ),
      4 => array(
        'winner' => 18,
        'slot' => 2,
      ),
      5 => array(
        'winner' => 19,
        'slot' => 1,
      ),
      6 => array(
        'winner' => 19,
        'slot' => 2,
      ),
      7 => array(
        'winner' => 20,
        'slot' => 1,
      ),
      8 => array(
        'winner' => 20,
        'slot' => 2,
      ),
      9 => array(
        'winner' => 21,
        'slot' => 1,
      ),
      10 => array(
        'winner' => 21,
        'slot' => 2,
      ),
      11 => array(
        'winner' => 22,
        'slot' => 1,
      ),
      12 => array(
        'winner' => 22,
        'slot' => 2,
      ),
      13 => array(
        'winner' => 23,
        'slot' => 1,
      ),
      14 => array(
        'winner' => 23,
        'slot' => 2,
      ),
      15 => array(
        'winner' => 24,
        'slot' => 1,
      ),
      16 => array(
        'winner' => 24,
        'slot' => 2,
      ),
      17 => array(
        'winner' => 25,
        'slot' => 1,
      ),
      18 => array(
        'winner' => 25,
        'slot' => 2,
      ),
      19 => array(
        'winner' => 26,
        'slot' => 1,
      ),
      20 => array(
        'winner' => 26,
        'slot' => 2,
      ),
      21 => array(
        'winner' => 27,
        'slot' => 1,
      ),
      22 => array(
        'winner' => 27,
        'slot' => 2,
      ),
      23 => array(
        'winner' => 28,
        'slot' => 1,
      ),
      24 => array(
        'winner' => 28,
        'slot' => 2,
      ),
      25 => array(
        'winner' => 29,
        'slot' => 1,
      ),
      26 => array(
        'winner' => 29,
        'slot' => 2,
      ),
      27 => array(
        'winner' => 30,
        'slot' => 1,
      ),
      28 => array(
        'winner' => 30,
        'slot' => 2,
      ),
      29 => array(
        'winner' => 31,
        'slot' => 1,
      ),
      30 => array(
        'winner' => 31,
        'slot' => 2,
      ),
    );

    $this->checkNextMatch($match, $tournament);

  }
}