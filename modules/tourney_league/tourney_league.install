<?php
/**
 * Implements hook_schema
 */
function tourney_league_schema() {
  $schema = array();

  // base table for the entity.
  $schema['tourney_league'] = array(
    'description' => 'Base table for the league entity',
    'fields' => array(
      'id' => array(
        'description' => 'The primary identifier of the entity',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'The type of the league',
        'type' => 'varchar',
        'length' => 255,
        'not null' => 255,
        'default' => 'league'
      ),
      'status' => array(
        'description' => 'Boolean indicating whether the node is published (visible to non-administrators).',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 1
      ),
      'label' => array(
        'description' => 'The label of the league',
        'type' => 'varchar',
        'length' => 255,
        'not null' => 255, 
        'default' => 'league'
      )
    ),
    'unique keys' => array(
      'id' => array('id'),
    ),
    'primary key' => array('id')
  );
  $schema['tourney_league_type'] = array(
    'description' => 'Stores information about all defined types.',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique type ID.',
      ),
      'name' => array(
        'description' => 'The machine-readable name of this type.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ),
      'label' => array(
        'description' => 'The human-readable name of this type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'weight' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
        'description' => 'The weight of this type in relation to others.',
      ),
      'locked' => array(
        'description' => 'A boolean indicating whether the administrator may delete this type.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
      ),
      'data' => array(
        'type' => 'text',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'A serialized array of additional data related to this type.',
        'merge' => TRUE,
      ),
      'status' => array(
        'type' => 'int',
        'not null' => TRUE,
        // Set the default to ENTITY_CUSTOM without using the constant as it is
        // not safe to use it at this point.
        'default' => 0x01,
        'size' => 'tiny',
        'description' => 'The exportable status of the entity.',
      ),
      'module' => array(
        'description' => 'The name of the providing module if the entity has been defined in code.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('id'),
    'unique keys' => array(
      'name' => array('name'),
    ),
  );

  return $schema;
}

/**
 * Install a bundle type
 */
function tourney_league_install() {
  $type = entity_create('tourney_league_type', array(
    'name' => 'league',
    'label' => st('League'),
    'weight' => 0,
  )); 
  $type->save();

  $instances = field_info_instances('tourney_tournament', 'tournament');
  if (!array_key_exists('field_league_reference', $instances)) {
    if (!field_info_field('field_league_reference')) {
      // create entity_reference field.
      $field = array(
        'field_name' => 'field_league_reference',
        'type' => 'entityreference',
        'settings' => array(
          'target_type' => 'tourney_league',
          'handler' => 'base',
          'handler_settings' => array(
            'target_bundles' => array('league')
          )
        ),
      );
      field_create_field($field);
    }

    // Create the entity_reference field instance.
    $instance = array(
      'field_name' => 'field_league_reference',
      'entity_type' => 'tourney_tournament',
      'bundle' => 'tournament',
      'label' => 'League reference',
      'description' => 'Stores a reference to leagues',
      'requried' => TRUE,
      'widget' => array(
        'type' => 'entityreference_autocomplete',
        'module' => 'entityreference',
        'active' => 1,
        'settings' => array(
          'match_operator' => 'CONTAINS',
          'size' => '60',
          'maxlength_js_label' => 'Content limited to @limit characters, remaining: <strong>@remaining</strong>',
          'path' => '',
        ),
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden'
        )
      )
    );

    field_create_instance($instance);
    drupal_set_message(t("!field_name was added successfully", array(
      '!field_name' => 'field_league_reference'
    )));
  }
}

/**
 * Implements hook_uninstall
 */
function tourney_league_uninstall() {
  db_drop_table('tourney_league');
  db_drop_table('tourney_league_type');
}
